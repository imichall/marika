-- Drop existing objects
drop table if exists changelog cascade;
drop type if exists branch_type cascade;

-- Create an enum for branch types
create type branch_type as enum ('main', 'dev');

-- Create the changelog table
create table changelog (
  id bigint generated by default as identity primary key,
  version varchar(50) not null,
  branch branch_type not null,
  commit_sha varchar(40),
  commit_url text,
  author varchar(100) not null,
  date timestamp with time zone not null,
  changes text[] not null,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- Create an index on branch and date for faster queries
create index changelog_branch_date_idx on changelog(branch, date);

-- Enable Row Level Security (RLS)
alter table changelog enable row level security;

-- Create policies
create policy "Enable read access for all users" on changelog
  for select using (true);

-- Upravená policy pro zápis - pouze pro konkrétní email
create policy "Enable write access for specific admin only" on changelog
  for all using (
    auth.jwt() ->> 'email' = 'iimichal.svoboda@gmail.com'
  );

-- Create a function to automatically update updated_at
create or replace function update_updated_at_column()
returns trigger as $$
begin
    new.updated_at = now();
    return new;
end;
$$ language plpgsql;

-- Create a trigger to automatically update updated_at
create trigger update_changelog_updated_at
    before update on changelog
    for each row
    execute function update_updated_at_column();